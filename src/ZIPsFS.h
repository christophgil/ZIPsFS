/* This file was automatically generated.  Do not edit! */
#undef INTERFACE
extern struct rlimit _rlimit;
bool maybe_cache_zip_entry(enum data_op op,struct fhdata *d,bool always);
bool cache_zip_entry(enum data_op op,struct fhdata *d);
void fhdata_zip_fclose(struct fhdata *d,char *msg);
int fhdata_zip_open(struct fhdata *d,char *msg);
int test_realpath_any_root(struct zippath *zpath,int force_root);
int read_zipdir(struct rootdata *rd,struct zippath *zpath,void *buf,fuse_fill_dir_t filler_maybe_null,struct ht *no_dups);
void readdir_append(int *i,struct rootdata *rd,long inode,const char *n,bool append_slash,long size);
bool illegal_char(const char *s);
int readdir_callback(void *arg1,int argc,char **argv,char **name);
int sql_exec(int flags,const char *sql,int(*callback)(void *,int,char **,char **),void *udp);
extern sqlite3 *_sqlitedb;
int zip_contained_in_virtual_path(const char *path,char *append[]);
struct zip *zpath_zip_open(struct zippath *zpath);
struct zip *my_zip_fdopen_ro(int *fd,const char *path);
int zpath_stat(struct zippath *zpath);
void zpath_destroy(struct zippath *zpath);
void zpath_reset_keep_VP(struct zippath *zpath);
void zpath_reset_realpath(struct zippath *zpath);
const char *zpath_zipentry(struct zippath *zpath);
int find_realpath_any_root(struct zippath *zpath,int force_root);
void zpath_stack_to_heap(struct zippath *zpath);
char *zpath_newstr(struct zippath *zpath);
int zpath_strlen(struct zippath *zpath);
int zpath_strncat(struct zippath *zpath,const char *s,int len);
void log_zpath(char *msg,struct zippath *zpath);
void zpath_assert_strlen(const char *title,struct zippath *zpath);
int zpath_strcat(struct zippath *zpath,const char *s);
void zpath_init(struct zippath *zpath,const char *virtualpath,char *strgs_on_stack);
void stat_set_dir(struct stat *s);
char *my_strncat(char *dst,const char *src,int n);
int pathlen_ignore_trailing_slash(const char *p);
int last_slash(const char *path);
int empty_dot_dotdot(const char *s);
int my_open_fh(const char *msg,const char *path,int flags);
void my_close_fh(int fh);
unsigned int my_strlen(const char *s);
void print_substring(char *s,int f,int t);
void clear_stat(struct stat *st);
const char *snull(const char *s);
